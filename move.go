package cube

var cubeSolved = cube{
	Edges: [edgeCount]piece{
		{Index: edgeUB, Orientation: 0},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeUF, Orientation: 0},
		{Index: edgeUL, Orientation: 0},
		{Index: edgeDF, Orientation: 0},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeDB, Orientation: 0},
		{Index: edgeDL, Orientation: 0},
		{Index: edgeFL, Orientation: 0},
		{Index: edgeFR, Orientation: 0},
		{Index: edgeBR, Orientation: 0},
		{Index: edgeBL, Orientation: 0},
	},
	Corners: [cornerCount]piece{
		{Index: cornerUBL, Orientation: 0},
		{Index: cornerURB, Orientation: 0},
		{Index: cornerUFR, Orientation: 0},
		{Index: cornerULF, Orientation: 0},
		{Index: cornerDFL, Orientation: 0},
		{Index: cornerDRF, Orientation: 0},
		{Index: cornerDBR, Orientation: 0},
		{Index: cornerDLB, Orientation: 0},
	},
}

var cubeU = cube{
	Edges: [edgeCount]piece{
		{Index: edgeUL, Orientation: 0},
		{Index: edgeUB, Orientation: 0},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeUF, Orientation: 0},
		{Index: edgeDF, Orientation: 0},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeDB, Orientation: 0},
		{Index: edgeDL, Orientation: 0},
		{Index: edgeFL, Orientation: 0},
		{Index: edgeFR, Orientation: 0},
		{Index: edgeBR, Orientation: 0},
		{Index: edgeBL, Orientation: 0},
	},
	Corners: [cornerCount]piece{
		{Index: cornerULF, Orientation: 0},
		{Index: cornerUBL, Orientation: 0},
		{Index: cornerURB, Orientation: 0},
		{Index: cornerUFR, Orientation: 0},
		{Index: cornerDFL, Orientation: 0},
		{Index: cornerDRF, Orientation: 0},
		{Index: cornerDBR, Orientation: 0},
		{Index: cornerDLB, Orientation: 0},
	},
}

var cubeL = cube{
	Edges: [edgeCount]piece{
		{Index: edgeUB, Orientation: 0},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeUF, Orientation: 0},
		{Index: edgeBL, Orientation: 0},
		{Index: edgeDF, Orientation: 0},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeDB, Orientation: 0},
		{Index: edgeFL, Orientation: 0},
		{Index: edgeUL, Orientation: 0},
		{Index: edgeFR, Orientation: 0},
		{Index: edgeBR, Orientation: 0},
		{Index: edgeDL, Orientation: 0},
	},
	Corners: [cornerCount]piece{
		{Index: cornerDLB, Orientation: 2},
		{Index: cornerURB, Orientation: 0},
		{Index: cornerUFR, Orientation: 0},
		{Index: cornerUBL, Orientation: 1},
		{Index: cornerULF, Orientation: 2},
		{Index: cornerDRF, Orientation: 0},
		{Index: cornerDBR, Orientation: 0},
		{Index: cornerDFL, Orientation: 1},
	},
}

var cubeF = cube{
	Edges: [edgeCount]piece{
		{Index: edgeUB, Orientation: 0},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeFL, Orientation: 1},
		{Index: edgeUL, Orientation: 0},
		{Index: edgeFR, Orientation: 1},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeDB, Orientation: 0},
		{Index: edgeDL, Orientation: 0},
		{Index: edgeDF, Orientation: 1},
		{Index: edgeUF, Orientation: 1},
		{Index: edgeBR, Orientation: 0},
		{Index: edgeBL, Orientation: 0},
	},
	Corners: [cornerCount]piece{
		{Index: cornerUBL, Orientation: 0},
		{Index: cornerURB, Orientation: 0},
		{Index: cornerULF, Orientation: 1},
		{Index: cornerDFL, Orientation: 2},
		{Index: cornerDRF, Orientation: 1},
		{Index: cornerUFR, Orientation: 2},
		{Index: cornerDBR, Orientation: 0},
		{Index: cornerDLB, Orientation: 0},
	},
}

var cubeR = cube{
	Edges: [edgeCount]piece{
		{Index: edgeUB, Orientation: 0},
		{Index: edgeFR, Orientation: 0},
		{Index: edgeUF, Orientation: 0},
		{Index: edgeUL, Orientation: 0},
		{Index: edgeDF, Orientation: 0},
		{Index: edgeBR, Orientation: 0},
		{Index: edgeDB, Orientation: 0},
		{Index: edgeDL, Orientation: 0},
		{Index: edgeFL, Orientation: 0},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeBL, Orientation: 0},
	},
	Corners: [cornerCount]piece{
		{Index: cornerUBL, Orientation: 0},
		{Index: cornerUFR, Orientation: 1},
		{Index: cornerDRF, Orientation: 2},
		{Index: cornerULF, Orientation: 0},
		{Index: cornerDFL, Orientation: 0},
		{Index: cornerDBR, Orientation: 1},
		{Index: cornerURB, Orientation: 2},
		{Index: cornerDLB, Orientation: 0},
	},
}

var cubeB = cube{
	Edges: [edgeCount]piece{
		{Index: edgeBR, Orientation: 1},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeUF, Orientation: 0},
		{Index: edgeUL, Orientation: 0},
		{Index: edgeDF, Orientation: 0},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeBL, Orientation: 1},
		{Index: edgeDL, Orientation: 0},
		{Index: edgeFL, Orientation: 0},
		{Index: edgeFR, Orientation: 0},
		{Index: edgeDB, Orientation: 1},
		{Index: edgeUB, Orientation: 1},
	},
	Corners: [cornerCount]piece{
		{Index: cornerURB, Orientation: 1},
		{Index: cornerDBR, Orientation: 2},
		{Index: cornerUFR, Orientation: 0},
		{Index: cornerULF, Orientation: 0},
		{Index: cornerDFL, Orientation: 0},
		{Index: cornerDRF, Orientation: 0},
		{Index: cornerDLB, Orientation: 1},
		{Index: cornerUBL, Orientation: 2},
	},
}

var cubeD = cube{
	Edges: [edgeCount]piece{
		{Index: edgeUB, Orientation: 0},
		{Index: edgeUR, Orientation: 0},
		{Index: edgeUF, Orientation: 0},
		{Index: edgeUL, Orientation: 0},
		{Index: edgeDL, Orientation: 0},
		{Index: edgeDF, Orientation: 0},
		{Index: edgeDR, Orientation: 0},
		{Index: edgeDB, Orientation: 0},
		{Index: edgeFL, Orientation: 0},
		{Index: edgeFR, Orientation: 0},
		{Index: edgeBR, Orientation: 0},
		{Index: edgeBL, Orientation: 0},
	},
	Corners: [cornerCount]piece{
		{Index: cornerUBL, Orientation: 0},
		{Index: cornerURB, Orientation: 0},
		{Index: cornerUFR, Orientation: 0},
		{Index: cornerULF, Orientation: 0},
		{Index: cornerDLB, Orientation: 0},
		{Index: cornerDFL, Orientation: 0},
		{Index: cornerDRF, Orientation: 0},
		{Index: cornerDBR, Orientation: 0},
	},
}

var moves = [moveCount]cube{
	cubeU,
	transform(cubeU, cubeU),
	transform(cubeU, transform(cubeU, cubeU)),
	cubeL,
	transform(cubeL, cubeL),
	transform(cubeL, transform(cubeL, cubeL)),
	cubeF,
	transform(cubeF, cubeF),
	transform(cubeF, transform(cubeF, cubeF)),
	cubeR,
	transform(cubeR, cubeR),
	transform(cubeR, transform(cubeR, cubeR)),
	cubeB,
	transform(cubeB, cubeB),
	transform(cubeB, transform(cubeB, cubeB)),
	cubeD,
	transform(cubeD, cubeD),
	transform(cubeD, transform(cubeD, cubeD)),
}
